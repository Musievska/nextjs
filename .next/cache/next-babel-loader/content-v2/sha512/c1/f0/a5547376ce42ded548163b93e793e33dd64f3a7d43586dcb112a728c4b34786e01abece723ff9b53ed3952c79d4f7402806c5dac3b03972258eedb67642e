{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aange\\\\Desktop\\\\udemyCourse\\\\nextjs\\\\pages\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n} //this only work in pages folder!!!\n//it is async and return promise\n//it is able to load data before this component function is execuited so it can be redndered with required data\n//any code can be written it wont be on client side!\n//always must return a {}\n//if data is change too often use revalidate property, it unlock feature incremental static deneration\n//https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\n// export async function getStaticProps() {\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//         revalidate: 1\n//     }\n// }\n//dont run in build process, instead always on the server after deployment\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/aange/Desktop/udemyCourse/nextjs/pages/index.js"],"names":["Fragment","Head","MeetupList","HomePage","props","meetups"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KAhCSF,Q;;AA8DT,eAAeA,QAAf","sourcesContent":["import { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nfunction HomePage(props) {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>React Meetups</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Browse a huge list of highly active React meetups!'\r\n                />\r\n            </Head>\r\n            <MeetupList meetups={props.meetups} />;\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\n//this only work in pages folder!!!\r\n//it is async and return promise\r\n//it is able to load data before this component function is execuited so it can be redndered with required data\r\n//any code can be written it wont be on client side!\r\n//always must return a {}\r\n//if data is change too often use revalidate property, it unlock feature incremental static deneration\r\n//https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\r\n// export async function getStaticProps() {\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         },\r\n//         revalidate: 1\r\n//     }\r\n// }\r\n\r\n//dont run in build process, instead always on the server after deployment\r\nexport async function getStaticProps() {\r\n    // fetch data from an API\r\n    const client = await MongoClient.connect(\r\n`https://data.mongodb-api.com/app/data-hvwbk/endpoint/data/v1`\r\n    )\r\n    //used when you use auth\r\n    //fetch data from api, always run on the server- never in the client \r\n    //runs on every coming reques and does not use revalidate\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map((meetup) => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString(),\r\n            })),\r\n        },\r\n        revalidate: 1,\r\n    };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}